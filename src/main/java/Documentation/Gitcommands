
-->git config
Usage: git config –global user.name “[name]”
Usage: git config –global user.email “[email address]”
Ex:git config –global user.name "sanjeevkmr60"
   git config –global user.email "sanjeevtesting12@gmail.com"

-->git clone [url]
Ex:git clone https://github.com/sanjeevkmr60/SeleniumAPITest

-->git init [repository name]
Ex:git init https://github.com/sanjeevkmr60

--> git status

   This command lists all the files that have to be committed.

--->git add [file] or git add *
Ex:git add .  or git add <filename1>,<filename2>


--> git commit -m “[ Type in the commit message]”
Ex:git commit -m "Added the files"

-->git push [variable name] master

   This command sends the committed changes of master branch to your remote repository.
Ex:git push origin <master> or <branch name>

-->git commit -a

   This command commits any files you’ve added with the git add command and also commits any files you’ve changed since then.

 -->git diff
    Usage: git diff

    This command shows the file differences which are not yet staged.

--> git diff –staged

   This command shows the differences between the files in the staging area and the latest version present.

 -->git reset [commit]

    This command undoes all the commits after the specified commit and preserves the changes locally.

 -->git reset –hard [commit]

    This command discards all history and goes back to the specified commit.

-->git rm [file]

   This command deletes the file from your working directory and stages the deletion.

 --> git log

    This command is used to list the version history for the current branch.

-->git log –follow[file]

   This command lists version history for a file, including the renaming of files also.

-->git show [commit]

This command shows the metadata and content changes of the specified commit.

-->git tag [commitID]

   This command is used to give tags to the specified commit.

-->git branch

   This command lists all the local branches in the current repository.

-->git branch [branch name]

   This command creates a new branch.

-->git checkout -b [branch name]

   This command creates a new branch and also switches to it.

--> git merge [branch name]

   This command merges the specified branch’s history into the current branch.

-->git remote
   Usage: git remote add [variable name] [Remote Server Link]

   This command is used to connect your local repository to the remote server.

-->git push [variable name] [branch]

   This command sends the branch commits to your remote repository.

-->git push –all [variable name]

      This command pushes all branches to your remote repository.

-->git push [variable name] :[branch name]

   This command deletes a branch on your remote repository.

-->git pull [Repository Link]

   This command fetches and merges changes on the remote server to your working directory.

-->git stash save

   This command temporarily stores all the modified tracked files.

-->git stash pop

   This command restores the most recently stashed files.

-->git stash list

   This command lists all stashed changesets.

-->git stash drop

   This command discards the most recently stashed changeset.

-->git checkout
   Usage: git checkout [branch name]

   This command is used to switch from one branch to another.

--> git checkout -b [branch name]

This command creates a new branch and also switches to it.

--->…or push an existing repository from the command line
git remote add origin https://github.com/sanjeevkmr60/SampleTest.git
git push -u origin master